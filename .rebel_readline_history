1540391656246:clj -m figwheel.main -b dev -r
<<<<<<< HEAD
1540832256592:;     ".thing" {:align-self :start :justify-self :stretch}
1540832259855:;     ".input" {:align-self :start}
1540896787753:(ns rs.actions)
1540896833999:(get-in @app-state [:canvas-rules "#canvas" :background :hue])
1540896963860:(swap! @app-state (fn [s] (assoc-in [:canvas-rules "#canvas" :background :hue] 100)\n                    )\n       )
1540897035741:(swap! @app-state (fn [s] (assoc-in [:canvas-rules "#canvas" :background :hue] 175)\n                    )\n       )
1540897091789:(swap! @app-state (fn [s] (assoc-in [:canvas-rules "#canvas" :background :hue] 175) ))
1540897104836:(swap! @app-state (fn [s] (assoc-in [:canvas-rules "#canvas" :background :hue] 10) ))
1541069087719:(ns rs.views)
1541069098837:(animation-rules)
1541069170622:(css-views {} (animation-rules))
1541069186491:(css-view\n {} (animation-rules))
1541086662791:(str (string/join "% " (range 1 10 1)) "%")
1541093154425:(defn colours []\n  \n    (map (fn [n] (rgba 216 215 n 0.3)) \n                (range 215 300 1)))
1541093206349:(use :reload 'rs.views)
1541093260999:(require :reload 'rs.views)
1541093279005:(colours)
1541093312839:(require :reload 'rs.views)
1541093810424:(colours)
1541093932976:(take 7 (colours))
1541093970056:(:hue (colours))
1541093982091:(map :hue (colours))
1541094367031:(take 3 (animation-rules))
=======
1540835042669:(require '[garden.color :as gc])
1540835066209:(gc/as-hex (gc/hsl 20 30 90))
1540895118455:(ns 'rs.actions)
1540895124060:(ns rs.actions)
1540895154938:(get-in @app-state [:canvas-rules "#canvas" :background :hue])
1540895205422:(get-in @app-state [:canvas-rules "#demo-button" :background :hue])
>>>>>>> bb72dca84d69d5a227330ebd62e7db8a09a72cf2
